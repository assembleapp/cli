#!/bin/bash
#
# Run assemble_cli in a container
#
# This script will attempt to mirror the host paths by using volumes for the
# following paths:
#   * $(pwd)


set -e

IMAGE="assemble_cli"
ASSEMBLE_CLI_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Setup options for connecting to docker host
if [ -z "$DOCKER_HOST" ]; then
    DOCKER_HOST="/var/run/docker.sock"
fi
if [ -S "$DOCKER_HOST" ]; then
    DOCKER_ADDR="-v $DOCKER_HOST:$DOCKER_HOST -e DOCKER_HOST"
else
    DOCKER_ADDR="-e DOCKER_HOST -e DOCKER_TLS_VERIFY -e DOCKER_CERT_PATH"
fi


# Setup volume mounts for compose config and context
if [ "$(pwd)" != '/' ]; then
    VOLUMES="-v $(pwd):$(pwd)"
fi
VOLUMES="$VOLUMES -v $ASSEMBLE_CLI_DIR:/assemble_bin"
VOLUMES="$VOLUMES -v $DOCKER_CERT_PATH:$DOCKER_CERT_PATH"
VOLUMES="$VOLUMES -v $HOME:/root"

# Only allocate tty if we detect one
if [ -t 1 ]; then
    DOCKER_RUN_OPTIONS="-t"
fi
if [ -t 0 ]; then
    DOCKER_RUN_OPTIONS="$DOCKER_RUN_OPTIONS -i"
fi

exec docker run --rm $DOCKER_RUN_OPTIONS $DOCKER_ADDR $VOLUMES -w "$(pwd)" $IMAGE /assemble_bin/assemble "$@"
